#!/usr/bin/env bash

# I use set -Eeuo pipefail to make sure that the script runs smoothly and safely in case of failures. That way it exits on failure,
# catches any unset variables I missed, and catches errors in any pipelines.
set -Eeuo pipefail

# This sets the report variable and is uniform across all scripts.
REPORT="/home/sysadmin/Linux_Python_and_Bash_Automation/Reports/report_$(date +%B-%d).txt"

# This just adds the header with blank space for formatting but also includes the date of the report.
# That way the report shows the status of the backup and then begins to gather information about the system.
echo "" | tee -a "$REPORT"
echo "======= System Summary Report =======" | tee -a "$REPORT"
echo "Report Date: $(date)" >> "$REPORT"
echo "" | tee -a "$REPORT"

# Command to return the hostname. That way I can always tell from which machine the report was gathered.
echo "------- Hostname -------" | tee -a "$REPORT"
echo "$(hostname)" | tee -a "$REPORT"
echo "" | tee -a "$REPORT"

# OS Version, this will check if the command lsb_release is available on the PATH. If it isn't it will instead cat /etc/os-release for the
# same information in a different format.
echo "------- OS Version -------" | tee -a "$REPORT"
if command -v lsb_release &> /dev/null; then
	echo "`lsb_release -a`" | tee -a "$REPORT" 2>/dev/null
else
	echo "`cat /etc/os-release`" | tee -a "$REPORT"
fi
echo "" | tee -a "$REPORT"

# Memory Information to see how much is currently being used and total capacity.
echo "------- Memory Information -------" | tee -a "$REPORT"
echo "`free -h`" | tee -a "$REPORT"
echo "" | tee -a "$REPORT"

# Uptime to see how long the machine was running before the report was made.
echo "------- Uptime -------" | tee -a "$REPORT"
echo "`uptime -p`" | tee -a "$REPORT"
